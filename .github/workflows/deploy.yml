name: Deploy to Production

on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:
  deploy:
    name: Pull and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: 📡 Connect to server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_KEY }}
          script: |
            echo "➡️ Connecting to server..."

            if [ ! -d "/var/www/production/fileshare" ]; then
              echo "📁 Directory does not exist. Cloning project..."
              git clone -b production git@github.com:your-username/your-repo.git /var/www/production/fileshare || { echo "❌ Git clone failed"; exit 1; }
            else
              echo "📂 Directory exists. Pulling latest changes..."
              cd /var/www/production/fileshare || { echo "❌ Failed to access project directory"; exit 1; }
              git pull origin production || { echo "❌ Git pull failed"; exit 1; }
            fi

            

            echo "📦 Installing Composer dependencies..."
            cd /var/www/production/fileshare

            echo "📂 Ensuring required directories exist..."
            mkdir -p storage/logs
            mkdir -p bootstrap/cache

            echo "🔧 Setting folder permissions..."
            sudo chown -R www-data:www-data storage bootstrap/cache || { echo "❌ chown failed"; exit 1; }
            sudo chmod -R 775 storage bootstrap/cache || { echo "❌ chmod failed"; exit 1; }
            
            echo "📦 Installing Composer dependencies..."    
            composer install --no-interaction --prefer-dist --optimize-autoloader || { echo "❌ Composer install failed"; exit 1; }
        
            echo "🚀 Optimizing Laravel..."
            php artisan optimize || { echo "❌ Artisan optimize failed"; exit 1; }

            echo "✅ Deployment completed successfully!"
